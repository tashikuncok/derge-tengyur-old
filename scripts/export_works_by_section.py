from export_works import *

# WARNING: requires to be in the same folder as export_works.py


def extract_lines(files):
    """
    parses the files line per line and returns the following structure

    return:
        {toh1: [(vol_id, line1), (vol_id, line2), ...], toh2: ...}
    """


    works = []
    prev_ref = ''
    current_work = []
    for file in files:
        prefix = file.stem
        lines = [line.strip().strip('\ufeff') for line in file.open().readlines()]
        for line in lines:
            ref = re.findall(r'{([DX].*?[ab]?)}', line)
            if ref:
                ### hack for case where two work refs are on the same line
                if len(ref) == 2 and ref[0] != ref[1]:
                    end_text, end_ref, start_text, start_ref, continue_text = re.split(r'{([DX].*?[ab]?)}', line)
                    current_work.append((prefix, end_text))
                    works.append((prev_ref, current_work))
                    works.append((end_ref, [(prefix, start_text)]))
                    prev_ref = start_ref
                    current_work = [(prefix, continue_text)]
                    continue
                ### end of hack
                if prev_ref != '':
                    current_work.append((prefix, line))

                    works.append((prev_ref, current_work))
                ref = ref[0]
                # initialize new work
                current_work = [(prefix, line)]
                prev_ref = ref
            else:
                current_work.append((prefix, line))
    return works


def write_works(works, out_path, linesep='\n'):
    for parent in list(out_path.parents) + [out_path]:
        if not parent.is_dir():
            parent.mkdir(exist_ok=True)

    for work, lines in works:
        if not work.startswith('X'):
            out_file = out_path / str(work + '.txt')
            out_file.write_text(linesep.join(lines))


sections = {
    'བསྟོད་ཚོགས།':
        [
            "001_བསྟོད་ཚོགས།_ཀ.txt"
        ],
    'རྒྱུད་འགྲེལ།':
        [
            "002_རྒྱུད་འགྲེལ།_ཀ.txt",
            "003_རྒྱུད་འགྲེལ།_ཁ.txt",
            "004_རྒྱུད་འགྲེལ།_ག.txt",
            "005_རྒྱུད་འགྲེལ།_ང.txt",
            "006_རྒྱུད་འགྲེལ།_ཅ.txt",
            "007_རྒྱུད་འགྲེལ།_ཆ.txt",
            "008_རྒྱུད་འགྲེལ།_ཇ.txt",
            "009_རྒྱུད་འགྲེལ།_ཉ.txt",
            "010_རྒྱུད་འགྲེལ།_ཏ.txt",
            "011_རྒྱུད་འགྲེལ།_ཐ.txt",
            "012_རྒྱུད་འགྲེལ།_ད.txt",
            "013_རྒྱུད་འགྲེལ།_ན.txt",
            "014_རྒྱུད་འགྲེལ།_པ.txt",
            "015_རྒྱུད་འགྲེལ།_ཕ.txt",
            "016_རྒྱུད་འགྲེལ།_བ.txt",
            "017_རྒྱུད་འགྲེལ།_མ.txt",
            "018_རྒྱུད་འགྲེལ།_ཙ.txt",
            "019_རྒྱུད་འགྲེལ།_ཚ.txt",
            "020_རྒྱུད་འགྲེལ།_ཛ.txt",
            "021_རྒྱུད་འགྲེལ།_ཝ.txt",
            "022_རྒྱུད་འགྲེལ།_ཞ.txt",
            "023_རྒྱུད་འགྲེལ།_ཟ.txt",
            "024_རྒྱུད་འགྲེལ།_འ.txt",
            "025_རྒྱུད་འགྲེལ།_ཡ.txt",
            "026_རྒྱུད་འགྲེལ།_ར.txt",
            "027_རྒྱུད་འགྲེལ།_ལ.txt",
            "028_རྒྱུད་འགྲེལ།_ཤ.txt",
            "029_རྒྱུད་འགྲེལ།_ས.txt",
            "030_རྒྱུད་འགྲེལ།_ཧ.txt",
            "031_རྒྱུད་འགྲེལ།_ཨ.txt",
            "032_རྒྱུད་འགྲེལ།_ཀི.txt",
            "033_རྒྱུད་འགྲེལ།_ཁི.txt",
            "034_རྒྱུད་འགྲེལ།_གི.txt",
            "035_རྒྱུད་འགྲེལ།_ངི.txt",
            "036_རྒྱུད་འགྲེལ།_ཅི.txt",
            "037_རྒྱུད་འགྲེལ།_ཆི.txt",
            "038_རྒྱུད་འགྲེལ།_ཇི.txt",
            "039_རྒྱུད་འགྲེལ།_ཉི.txt",
            "040_རྒྱུད་འགྲེལ།_ཏི.txt",
            "041_རྒྱུད་འགྲེལ།_ཐི.txt",
            "042_རྒྱུད་འགྲེལ།_དི.txt",
            "043_རྒྱུད་འགྲེལ།_ནི.txt",
            "044_རྒྱུད་འགྲེལ།_པི.txt",
            "045_རྒྱུད་འགྲེལ།_ཕི.txt",
            "046_རྒྱུད་འགྲེལ།_བི.txt",
            "047_རྒྱུད་འགྲེལ།_མི.txt",
            "048_རྒྱུད་འགྲེལ།_ཙི.txt",
            "049_རྒྱུད་འགྲེལ།_ཚི.txt",
            "050_རྒྱུད་འགྲེལ།_ཛི.txt",
            "051_རྒྱུད་འགྲེལ།_ཝི.txt",
            "052_རྒྱུད་འགྲེལ།_ཞི.txt",
            "053_རྒྱུད་འགྲེལ།_ཟི.txt",
            "054_རྒྱུད་འགྲེལ།_འི.txt",
            "055_རྒྱུད་འགྲེལ།_ཡི.txt",
            "056_རྒྱུད་འགྲེལ།_རི.txt",
            "057_རྒྱུད་འགྲེལ།_ལི.txt",
            "058_རྒྱུད་འགྲེལ།_ཤི.txt",
            "059_རྒྱུད་འགྲེལ།_སི.txt",
            "060_རྒྱུད་འགྲེལ།_ཧི.txt",
            "061_རྒྱུད་འགྲེལ།_ཨི.txt",
            "062_རྒྱུད་འགྲེལ།_ཀུ.txt",
            "063_རྒྱུད་འགྲེལ།_ཁུ.txt",
            "064_རྒྱུད་འགྲེལ།_གུ.txt",
            "065_རྒྱུད་འགྲེལ།_ངུ.txt",
            "066_རྒྱུད་འགྲེལ།_ཅུ.txt",
            "067_རྒྱུད་འགྲེལ།_ཆུ.txt",
            "068_རྒྱུད་འགྲེལ།_ཇུ.txt",
            "069_རྒྱུད་འགྲེལ།_ཉུ.txt",
            "070_རྒྱུད་འགྲེལ།_ཏུ.txt",
            "071_རྒྱུད་འགྲེལ།_ཐུ.txt",
            "072_རྒྱུད་འགྲེལ།_དུ.txt",
            "073_རྒྱུད་འགྲེལ།_ནུ.txt",
            "074_རྒྱུད་འགྲེལ།_པུ.txt",
            "075_རྒྱུད་འགྲེལ།_ཕུ.txt",
            "076_རྒྱུད་འགྲེལ།_བུ.txt",
            "077_རྒྱུད་འགྲེལ།_མུ.txt",
            "078_རྒྱུད་འགྲེལ།_ཙུ.txt",
            "079_རྒྱུད་འགྲེལ།_ཚུ.txt"
        ],
    'ཤེར་ཕྱིན།':
        [
            "080_ཤེར་ཕྱིན།_ཀ.txt",
            "081_ཤེར་ཕྱིན།_ཁ.txt",
            "082_ཤེར་ཕྱིན།_ག.txt",
            "083_ཤེར་ཕྱིན།_ང.txt",
            "084_ཤེར་ཕྱིན།_ཅ.txt",
            "085_ཤེར་ཕྱིན།_ཆ.txt",
            "086_ཤེར་ཕྱིན།_ཇ.txt",
            "087_ཤེར་ཕྱིན།_ཉ.txt",
            "088_ཤེར་ཕྱིན།_ཏ.txt",
            "089_ཤེར་ཕྱིན།_ཐ.txt",
            "090_ཤེར་ཕྱིན།_ད.txt",
            "091_ཤེར་ཕྱིན།_ན.txt",
            "092_ཤེར་ཕྱིན།_པ.txt",
            "093_ཤེར་ཕྱིན།_ཕ.txt",
            "094_ཤེར་ཕྱིན།_བ.txt",
            "095_ཤེར་ཕྱིན།_མ.txt"
        ],
    'དབུ་མ།':
        [
            "096_དབུ་མ།_ཙ.txt",
            "097_དབུ་མ།_ཚ.txt",
            "098_དབུ་མ།_ཛ.txt",
            "099_དབུ་མ།_ཝ.txt",
            "100_དབུ་མ།_ཞ.txt",
            "101_དབུ་མ།_ཟ.txt",
            "102_དབུ་མ།_འ.txt",
            "103_དབུ་མ།_ཡ.txt",
            "104_དབུ་མ།_ར.txt",
            "105_དབུ་མ།_ལ.txt",
            "106_དབུ་མ།_ཤ.txt",
            "107_དབུ་མ།_ས.txt",
            "108_དབུ་མ།_ཧ.txt",
            "109_དབུ་མ།_ཨ.txt",
            "110_དབུ་མ།_ཀི.txt",
            "111_དབུ་མ།_ཁི.txt",
            "112_དབུ་མ།_གི.txt"
        ],
    'མདོ་སྡེ།':
        [
            "113_མདོ་སྡེ།_ངི.txt",
            "114_མདོ་སྡེ།_ཅི.txt",
            "115_མདོ་སྡེ།_ཆི.txt",
            "116_མདོ་སྡེ།_ཇི.txt",
            "117_མདོ་སྡེ།_ཉི.txt",
            "118_མདོ་སྡེ།_ཏི.txt",
            "119_མདོ་སྡེ།_ཐི.txt",
            "120_མདོ་སྡེ།_དི.txt",
            "121_མདོ་སྡེ།_ནི.txt",
            "122_མདོ་སྡེ།_པི.txt"
        ],
    'སེམས་ཙམ།':
        [
            "123_སེམས་ཙམ།_ཕི.txt",
            "124_སེམས་ཙམ།_བི.txt",
            "125_སེམས་ཙམ།_མི.txt",
            "126_སེམས་ཙམ།_ཙི.txt",
            "127_སེམས་ཙམ།_ཚི.txt",
            "128_སེམས་ཙམ།_ཛི.txt",
            "129_སེམས་ཙམ།_ཝི.txt",
            "130_སེམས་ཙམ།_ཞི.txt",
            "131_སེམས་ཙམ།_ཟི.txt",
            "132_སེམས་ཙམ།_འི.txt",
            "133_སེམས་ཙམ།_ཡི.txt",
            "134_སེམས་ཙམ།_རི.txt",
            "135_སེམས་ཙམ།_ལི.txt",
            "136_སེམས་ཙམ།_ཤི.txt",
            "137_སེམས་ཙམ།_སི.txt",
            "138_སེམས་ཙམ།_ཧི.txt"
        ],
    'མངོན་པ།':
        [
            "139_མངོན་པ།_ཨི.txt",
            "140_མངོན་པ།_ཀུ.txt",
            "141_མངོན་པ།_ཁུ.txt",
            "142_མངོན་པ།_གུ.txt",
            "143_མངོན་པ།_ངུ.txt",
            "144_མངོན་པ།_ཅུ.txt",
            "145_མངོན་པ།_ཆུ.txt",
            "146_མངོན་པ།_ཇུ.txt",
            "147_མངོན་པ།_ཉུ.txt",
            "148_མངོན་པ།_ཏུ.txt",
            "149_མངོན་པ།_ཐུ.txt"
        ],
    'འདུལ་བ།':
        [
            "150_འདུལ་བ།_དུ.txt",
            "151_འདུལ་བ།_ནུ.txt",
            "152_འདུལ་བ།_པུ.txt",
            "153_འདུལ་བ།_ཕུ.txt",
            "154_འདུལ་བ།_བུ.txt",
            "155_འདུལ་བ།_མུ.txt",
            "156_འདུལ་བ།_ཙུ.txt",
            "157_འདུལ་བ།_ཚུ.txt",
            "158_འདུལ་བ།_ཛུ.txt",
            "159_འདུལ་བ།_ཝུ.txt",
            "160_འདུལ་བ།_ཞུ.txt",
            "161_འདུལ་བ།_ཟུ.txt",
            "162_འདུལ་བ།_འུ.txt",
            "163_འདུལ་བ།_ཡུ.txt",
            "164_འདུལ་བ།_རུ.txt",
            "165_འདུལ་བ།_ལུ.txt",
            "166_འདུལ་བ།_ཤུ.txt",
            "167_འདུལ་བ།_སུ.txt"
        ],
    'སྐྱེས་རབས།':
        [
            "168_སྐྱེས་རབས།_ཧུ.txt",
            "169_སྐྱེས་རབས།_ཨུ.txt"
        ],
    'འཁྲི་ཤིང།':
        [
            "170_འཁྲི་ཤིང།_ཀེ.txt",
            "171_འཁྲི་ཤིང།_ཁེ.txt",
            "172_སྐྱེས་རབས།_གེ.txt"
        ],
    'སྤྲིང་ཡིག':
        [
            "173_སྤྲིང་ཡིག_ངེ.txt"
        ],
    'ཚད་མ།':
        [
            "174_ཚད་མ།_ཅེ.txt",
            "175_ཚད་མ།_ཆེ.txt",
            "176_ཚད་མ།_ཇེ.txt",
            "177_ཚད་མ།_ཉེ.txt",
            "178_ཚད་མ།_ཏེ.txt",
            "179_ཚད་མ།_ཐེ.txt",
            "180_ཚད་མ།_དེ.txt",
            "181_ཚད་མ།_ནེ.txt",
            "182_ཚད་མ།_པེ.txt",
            "183_ཚད་མ།_ཕེ.txt",
            "184_ཚད་མ།_བེ.txt",
            "185_ཚད་མ།_མེ.txt",
            "186_ཚད་མ།_ཙེ.txt",
            "187_ཚད་མ།_ཚེ.txt",
            "188_ཚད་མ།_ཛེ.txt",
            "189_ཚད་མ།_ཝེ.txt",
            "190_ཚད་མ།_ཞེ.txt",
            "191_ཚད་མ།_ཟེ.txt",
            "192_ཚད་མ།_འེ.txt",
            "193_ཚད་མ།_ཡེ.txt"
        ],
    'སྒྲ་མདོ།':
        [
            "194_སྒྲ་མདོ།_རེ.txt",
            "195_སྒྲ་མདོ།_ལེ.txt",
            "196_སྒྲ་མདོ།_ཤེ.txt",
            "197_སྒྲ་མདོ།_སེ.txt",
            "208_སྒྲ་མདོ།_ཏོ.txt"
        ],
    'གསོ་རིག':
        [
            "198_གསོ་རིག_ཧེ.txt",
            "199_གསོ་རིག_ཨེ.txt",
            "200_གསོ་རིག_ཀོ.txt",
            "201_གསོ་རིག_ཁོ.txt",
            "202_གསོ་རིག_གོ.txt"
        ],
    'སྣ་ཚོགས།':
        [
            "203_སྣ་ཚོགས།_ངོ.txt",
            "204_སྣ་ཚོགས།_ཅོ.txt",
            "205_སྣ་ཚོགས།_ཆོ.txt",
            "206_སྣ་ཚོགས།_ཇོ.txt",
            "207_སྣ་ཚོགས།_ཉོ.txt",
            "209_སྣ་ཚོགས།_ཐོ.txt",
            "210_སྣ་ཚོགས།_དོ.txt",
            "211_སྣ་ཚོགས།_ནོ.txt",
            "212_སྣ་ཚོགས།_པོ.txt"
        ]
}

if __name__ == '__main__':
    args = parser.parse_args()
    prefix = Path('../derge-tengyur-tags')
    out_path = Path('export/sections')

    for section, filenames in sections.items():
        paths = [prefix / filename for filename in filenames]

        works = extract_lines(paths)
        works = works_in_pages(works)
        works = works_stripped(works)
        flatten_for_output(works)
        # if bool(args.clean_content):
        works = remove_markup(works)
        write_works(works, out_path / section, linesep='')
